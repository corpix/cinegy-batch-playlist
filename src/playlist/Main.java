package playlist;

import java.awt.BorderLayout;
import java.awt.Point;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DnDConstants;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.util.List;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.table.DefaultTableModel;
        
        

public class Main extends javax.swing.JFrame {
    private DefaultTableModel playlistTableModel;
    
    /** Creates new form Main */
    public Main() {
        playlistTableModel = new javax.swing.table.DefaultTableModel(
            new Object [][] { },
            new String [] {
                "Путь", "Длинна(милисек)"
            }
        );
        
        initComponents(); // Requires playlistTableModel to be defined
        
        creatPlaylistButton.setEnabled(false);
        
        playlistTableScrollPane.setDropTarget(new DropTarget(){
            @Override
            public synchronized void drop(DropTargetDropEvent dtde) {
                //Point point = dtde.getLocation();
                //int column = playlistTable.columnAtPoint(point);
                //int row = playlistTable.rowAtPoint(point);
                // handle drop inside current table
                
                dtde.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);
                Transferable t = dtde.getTransferable();
                List fileList = null;
                try {
                    fileList = (List)t.getTransferData(DataFlavor.javaFileListFlavor);
                } catch (UnsupportedFlavorException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                File f;
                for (int i = 0; i < fileList.size(); i++){
                    f = (File)fileList.get(i);
                    playlistTableModel.insertRow(playlistTableModel.getRowCount(), new Object[]{
                        f.getAbsolutePath(), f.length()
                    });
                }
                
                creatPlaylistButton.setEnabled(true);
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        creatPlaylistButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        dropVideoNotify = new javax.swing.JLabel();
        playlistTableScrollPane = new javax.swing.JScrollPane();
        playlistTable = new javax.swing.JTable();
        cleanupButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Batch ingest playlist creator");

        creatPlaylistButton.setText("Создать плейлист");
        creatPlaylistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creatPlaylistButtonActionPerformed(evt);
            }
        });

        dropVideoNotify.setForeground(new java.awt.Color(148, 148, 148));
        dropVideoNotify.setText("Перетащите видео-файлы в таблицу");

        playlistTable.setModel(playlistTableModel);
        playlistTableScrollPane.setViewportView(playlistTable);

        cleanupButton.setText("Очистить");
        cleanupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanupButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(cleanupButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 249, Short.MAX_VALUE)
                        .add(dropVideoNotify)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(creatPlaylistButton))
                    .add(playlistTableScrollPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(playlistTableScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(creatPlaylistButton)
                    .add(dropVideoNotify)
                    .add(cleanupButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creatPlaylistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creatPlaylistButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_creatPlaylistButtonActionPerformed

    private void cleanupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanupButtonActionPerformed
        creatPlaylistButton.setEnabled(false);
        while(playlistTableModel.getRowCount() > 0) {
            playlistTableModel.removeRow(0);
        }
    }//GEN-LAST:event_cleanupButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cleanupButton;
    private javax.swing.JButton creatPlaylistButton;
    private javax.swing.JLabel dropVideoNotify;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable playlistTable;
    private javax.swing.JScrollPane playlistTableScrollPane;
    // End of variables declaration//GEN-END:variables
    
}
